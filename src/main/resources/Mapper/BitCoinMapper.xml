<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.diff._private.Mapper.BitCoinMapper">
	<select id="MainGridList" resultType="HashMap" parameterType="HashMap">
		select x.coin_ticker id, x.gijun_date, x.coin_kor_name, x.coin_eng_name, x.max_price, x.min_price, x.max_date, x.min_date, x.o_price, x.c_price, x.l_price, x.h_price, x.trade_volume
			 , coalesce(x.o_c_price_rate_5_date, '') o_c_price_rate_5_date, coalesce(x.o_c_price_rate_10_date, '') o_c_price_rate_10_date, coalesce(x.o_c_price_rate_15_date, '') o_c_price_rate_15_date
	 		 , coalesce(x.o_c_price_rate_20_date, '') o_c_price_rate_20_date, coalesce(x.o_c_price_rate_25_date, '') o_c_price_rate_25_date, coalesce(x.o_c_price_rate_30_date, '') o_c_price_rate_30_date
	 		 , coalesce(cast(x.o_c_price_rate_5_count as varchar), '0') o_c_price_rate_5_count, coalesce(cast(x.o_c_price_rate_10_count as varchar), '0') o_c_price_rate_10_count, coalesce(cast(x.o_c_price_rate_15_count as varchar), '0') o_c_price_rate_15_count
	 		 , coalesce(cast(x.o_c_price_rate_20_count as varchar), '0') o_c_price_rate_20_count, coalesce(cast(x.o_c_price_rate_25_count as varchar), '0') o_c_price_rate_25_count, coalesce(cast(x.o_c_price_rate_30_count as varchar), '0') o_c_price_rate_30_count
			 , cast((ROUND(((cast(x.c_price as numeric)-cast(x.o_price as numeric))/cast(x.o_price as numeric))*100,1)) as varchar) open_close_rate
			 , cast(ROUND(((((cast(x.max_price as numeric) - cast(x.min_price as numeric))/ cast(x.min_price as numeric))) * 100), 1) as varchar) lowest_highest_fluctuation
			 , cast(ROUND((((cast(x.c_price as numeric) / (cast(x.min_price as numeric) + cast(x.max_price as numeric)))) * 100), 1) as varchar) highest_lowest_100per
			 , cast((ROUND(((((cast(x.max_price as numeric) - cast(x.c_price as numeric)) / cast(x.max_price as numeric))) * 100), 1)) as varchar) highest_decline_rate
			 , cast((ROUND(((((cast(x.c_price as numeric) - cast(x.min_price as numeric)) / cast(x.min_price as numeric))) * 100), 1)) as varchar) lowest_rise_rate
		  from (
				select x.coin_ticker, y.coin_kor_name, y.coin_eng_name
					 , coalesce((select max(replace(a.datetime_kst, ' 00:00:00', '')) 
					 			   from bithumb_coin_days a 
					 			  where a.coin_ticker = x.coin_ticker 
				 			     <if test='std_date != null and std_date != "" '>
									and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
								 </if>
								 <if test='end_date != null and end_date != "" '>
									and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
								 </if>
					 			    and a.l_price = cast(min(cast(x.l_price as numeric)) as varchar)), '') min_date
			 		 , coalesce((select max(replace(a.datetime_kst, ' 00:00:00', '')) 
			 		 			   from bithumb_coin_days a 
			 		 			  where a.coin_ticker = x.coin_ticker
			 		 			  <if test='std_date != null and std_date != "" '>
									and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
								  </if>
								  <if test='end_date != null and end_date != "" '>
									and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
								  </if>
			 		 			    and a.h_price = cast(max(cast(x.h_price as numeric)) as varchar)), '') max_date
					 , case when position('.0' in cast(min(cast(x.l_price as numeric)) as varchar)) > (char_length(cast(min(cast(x.l_price as numeric)) as varchar))-2) then replace((cast(min(cast(x.l_price as numeric)) as varchar)), '.0', '') else cast(min(cast(x.l_price as numeric)) as varchar) end  min_price
					 , case when position('.0' in cast(max(cast(x.h_price as numeric)) as varchar)) > (char_length(cast(max(cast(x.h_price as numeric)) as varchar))-2) then replace((cast(max(cast(x.h_price as numeric)) as varchar)), '.0', '') else cast(max(cast(x.h_price as numeric)) as varchar) end  max_price
		             , (select case when position('.0' in z.c_price) > (char_length(z.c_price)-2) then replace(z.c_price, '.0', '') else z.c_price end 
		             	  from bithumb_coin_days z 
		             	 where x.coin_ticker = z.coin_ticker 
		             	 <if test='std_date != null and std_date != "" '>
							and left(z.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(z.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
		             	 order by z.datetime_kst desc 
		             	 limit 1) c_price
		             , (select case when position('.0' in z.o_price) > (char_length(z.o_price)-2) then replace(z.o_price, '.0', '') else z.o_price end 
		                  from bithumb_coin_days z 
		                 where x.coin_ticker = z.coin_ticker 
		                 <if test='std_date != null and std_date != "" '>
							and left(z.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(z.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
		                 order by z.datetime_kst asc 
		                 limit 1) o_price
					 , (select case when position('.0' in cast(min(cast(z.l_price as numeric)) as varchar)) > (char_length(cast(min(cast(z.l_price as numeric)) as varchar))-2) then replace(cast(min(cast(z.l_price as numeric)) as varchar), '.0', '') else cast(min(cast(z.l_price as numeric)) as varchar) end 
					 	  from bithumb_coin_days z
					 	 where x.coin_ticker = z.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(z.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(z.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	 limit 1) l_price
		     		 , (select case when position('.0' in cast(max(cast(z.h_price as numeric)) as varchar)) > (char_length(cast(max(cast(z.h_price as numeric)) as varchar))-2) then replace(cast(max(cast(z.h_price as numeric)) as varchar), '.0', '') else cast(max(cast(z.h_price as numeric)) as varchar) end 
		     		 	  from bithumb_coin_days z 
		     		 	 where x.coin_ticker = z.coin_ticker 
		     		 	 <if test='std_date != null and std_date != "" '>
							and left(z.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(z.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
		     		 	 limit 1) h_price
		 			 , (select replace(a.datetime_kst, ' 00:00:00', '') 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	 order by a.datetime_kst desc 
					 	 limit 1) gijun_date
					 , (select replace(a.datetime_kst, ' 00:00:00', '') 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 5 
					 	 order by a.datetime_kst desc limit 1) o_c_price_rate_5_date
					 , (select replace(a.datetime_kst, ' 00:00:00', '') 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 10 
					 	 order by a.datetime_kst desc limit 1) o_c_price_rate_10_date
					 , (select replace(a.datetime_kst, ' 00:00:00', '') 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 15 
					 	 order by a.datetime_kst desc limit 1) o_c_price_rate_15_date
					 , (select replace(a.datetime_kst, ' 00:00:00', '') 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 20 
					 	 order by a.datetime_kst desc limit 1) o_c_price_rate_20_date
					 , (select replace(a.datetime_kst, ' 00:00:00', '') 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 25 
					 	 order by a.datetime_kst desc limit 1) o_c_price_rate_25_date
					 , (select replace(a.datetime_kst, ' 00:00:00', '') 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 30 
					 	 order by a.datetime_kst desc limit 1) o_c_price_rate_30_date
					 , (select count(*) 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 5) o_c_price_rate_5_count
					 , (select count(*) 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 10) o_c_price_rate_10_count
					 , (select count(*) 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 15) o_c_price_rate_15_count
					 , (select count(*) 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 20) o_c_price_rate_20_count
					 , (select count(*) 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 25) o_c_price_rate_25_count
					 , (select count(*) 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 30) o_c_price_rate_30_count
					 , (select cast(round(cast(trade_volume as numeric)) as varchar) trade_volume
						  from bithumb_coin_days z 
						 where x.coin_ticker = z.coin_ticker 
						 <if test='std_date != null and std_date != "" '>
							and left(z.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(z.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
						 order by z.datetime_kst desc limit 1)  trade_volume
				  from bithumb_coin_days x, bithumb_coin_info y
				 where x.coin_ticker = y.coin_ticker
				 <if test='std_date != null and std_date != "" '>
					and left(x.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
				 </if>
				 <if test='end_date != null and end_date != "" '>
					and left(x.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
				 </if>
				 group by x.coin_ticker, y.coin_kor_name, y.coin_eng_name
		 	   ) x
		  order by cast(x.c_price as numeric) desc
	</select>

	<select id="CoinInfo" resultType="HashMap">
		select coin_ticker, coin_kor_name, coin_eng_name
		  from bithumb_coin_info
		 where coin_delete_yn = 'N'
	</select>
	
	<select id="ExcelMake_Daily_Result" resultType="java.lang.String" parameterType="HashMap">
		select ('상승 = ' || cast(x.increase_count as varchar) || ' | 하락 = ' || cast(x.degradation_count as varchar) || ' | 보합 = ' || cast(x.flat_count as varchar)) result_data
		  from (
				 select sum((select count(*) from bithumb_coin_days y where x.coin_ticker = y.coin_ticker and cast(x.o_price as numeric) <![CDATA[ < ]]> cast(x.c_price as numeric) and x.datetime_kst= y.datetime_kst)) increase_count
				      , sum((select count(*) from bithumb_coin_days y where x.coin_ticker = y.coin_ticker and cast(x.o_price as numeric) <![CDATA[ > ]]> cast(x.c_price as numeric) and x.datetime_kst= y.datetime_kst)) degradation_count
				      , sum((select count(*) from bithumb_coin_days y where x.coin_ticker = y.coin_ticker and cast(x.o_price as numeric) <![CDATA[ = ]]> cast(x.c_price as numeric) and x.datetime_kst= y.datetime_kst)) flat_count
				   from bithumb_coin_days x
				  where left(x.datetime_kst, 10) = #{date}
		   		) x	</select>
	
	<select id="ExcelMake_Daily" resultType="HashMap" parameterType="HashMap">
		select x.coin_ticker, x.coin_kor_name, x.coin_eng_name, x.o_price, x.c_price, x.l_price, x.h_price
			 , coalesce(x.coin_price_min_time, '') coin_price_min_time, coalesce(x.coin_price_max_time, '') coin_price_max_time
			 , coalesce(x.coin_volume_min_time, '') coin_volume_min_time, coalesce(x.coin_volume_max_time, '') coin_volume_max_time
			 , cast((ROUND(((cast(x.c_price as numeric)-cast(x.o_price as numeric))/cast(x.o_price as numeric))*100,1)) as varchar) open_close_rate
			 , cast((cast(x.c_price as numeric)-cast(x.o_price as numeric)) as varchar) open_close_calc
			 , cast(ROUND(((((cast(x.max_price as numeric) - cast(x.min_price as numeric))/ cast(x.min_price as numeric))) * 100), 1) as varchar) lowest_highest_fluctuation
			 , cast((cast(x.max_price as numeric)-cast(x.min_price as numeric)) as varchar) lowest_highest_calc
		  from (
				select x.coin_ticker, y.coin_kor_name, y.coin_eng_name
					 , case when position('.0' in cast(min(cast(x.l_price as numeric)) as varchar)) > (char_length(cast(min(cast(x.l_price as numeric)) as varchar))-2) then replace((cast(min(cast(x.l_price as numeric)) as varchar)), '.0', '') else cast(min(cast(x.l_price as numeric)) as varchar) end  min_price
					 , case when position('.0' in cast(max(cast(x.h_price as numeric)) as varchar)) > (char_length(cast(max(cast(x.h_price as numeric)) as varchar))-2) then replace((cast(max(cast(x.h_price as numeric)) as varchar)), '.0', '') else cast(max(cast(x.h_price as numeric)) as varchar) end  max_price
		             , (select case when position('.0' in z.c_price) > (char_length(z.c_price)-2) then replace(z.c_price, '.0', '') else z.c_price end 
		             	  from bithumb_coin_days z 
		             	 where x.coin_ticker = z.coin_ticker 
		             	   and left(z.datetime_kst, 10) = #{date}
		             	 order by z.datetime_utc desc 
		             	 limit 1) c_price
		             , (select case when position('.0' in z.o_price) > (char_length(z.o_price)-2) then replace(z.o_price, '.0', '') else z.o_price end 
		                  from bithumb_coin_days z 
		                 where x.coin_ticker = z.coin_ticker 
		                   and left(z.datetime_kst, 10) = #{date}
		                 order by z.datetime_utc asc 
		                 limit 1) o_price
					 , (select case when position('.0' in cast(min(cast(z.l_price as numeric)) as varchar)) > (char_length(cast(min(cast(z.l_price as numeric)) as varchar))-2) then replace(cast(min(cast(z.l_price as numeric)) as varchar), '.0', '') else cast(min(cast(z.l_price as numeric)) as varchar) end 
					 	  from bithumb_coin_days z
					 	 where x.coin_ticker = z.coin_ticker 
					 	   and left(z.datetime_kst, 10) = #{date}
					 	 limit 1) l_price
		     		 , (select case when position('.0' in cast(max(cast(z.h_price as numeric)) as varchar)) > (char_length(cast(max(cast(z.h_price as numeric)) as varchar))-2) then replace(cast(max(cast(z.h_price as numeric)) as varchar), '.0', '') else cast(max(cast(z.h_price as numeric)) as varchar) end 
		     		 	  from bithumb_coin_days z 
		     		 	 where x.coin_ticker = z.coin_ticker 
		     		 	   and left(z.datetime_kst, 10) = #{date}
		     		 	 limit 1) h_price
		     		 , (select substring(z.datetime_kst, 12,2)
						  from bithumb_coin_min z
						 where x.coin_ticker = z.coin_ticker
						   and left(z.datetime_kst, 10) = #{date}
						 group by substring(z.datetime_utc, 12,2), substring(z.datetime_kst, 12,2)
						 order by sum(cast(z.trade_volume as numeric)) desc
						 limit 1) coin_volume_max_time
				     , (select substring(z.datetime_kst, 12,2)
						  from bithumb_coin_min z
						 where x.coin_ticker = z.coin_ticker
						   and left(z.datetime_kst, 10) = #{date}
						 group by substring(z.datetime_utc, 12,2), substring(z.datetime_kst, 12,2)
						 order by sum(cast(z.trade_volume as numeric)) asc
						 limit 1) coin_volume_min_time
					 , (select substring(z.datetime_kst, 12,5)
		 			      from bithumb_coin_min z
		 			     where x.coin_ticker = z.coin_ticker
		 			       and left(z.datetime_kst, 10) = #{date}
		 			       and cast(cast(z.l_price as numeric) as varchar) = cast(min(cast(x.l_price as numeric)) as varchar)
		 			     order by substring(z.datetime_utc, 12,2)
		 			     limit 1) coin_price_min_time
		 			 , (select substring(z.datetime_kst, 12,5)
		 			      from bithumb_coin_min z
		 			     where x.coin_ticker = z.coin_ticker
		 			       and left(z.datetime_kst, 10) = #{date}
		 			       and cast(cast(z.h_price as numeric) as varchar) = cast(max(cast(x.h_price as numeric)) as varchar)
		 			     order by substring(z.datetime_utc, 12,2)
		 			     limit 1) coin_price_max_time
				  from bithumb_coin_days x, bithumb_coin_info y
				 where x.coin_ticker = y.coin_ticker
				   and x.coin_ticker != 'NFT'
				   and left(x.datetime_kst, 10) = #{date}
				 group by x.coin_ticker, y.coin_kor_name, y.coin_eng_name
		 	   ) x
		  order by case x.coin_ticker when 'BTC' then 0 else 1 end
		  	  , ((ROUND(((cast(x.c_price as numeric)-cast(x.o_price as numeric))/cast(x.o_price as numeric))*100,1))+ROUND(((((cast(x.max_price as numeric) - cast(x.min_price as numeric))/ cast(x.min_price as numeric))) * 100), 1)) desc
		  limit 4
	</select>
	
	<select id="ExcelMake_Daily_Sub" resultType="HashMap" parameterType="HashMap">
		  select case when cast(substring(x.datetime_kst, 12,2) as integer) >= 0 and cast(substring(x.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 4 then '09:00'
			    	  when cast(substring(x.datetime_kst, 12,2) as integer) >= 4 and cast(substring(x.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 8 then '13:00'
			          when cast(substring(x.datetime_kst, 12,2) as integer) >= 8 and cast(substring(x.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 12 then '17:00'
			          when cast(substring(x.datetime_kst, 12,2) as integer) >= 12 and cast(substring(x.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 16 then '21:00'
			          when cast(substring(x.datetime_kst, 12,2) as integer) >= 16 and cast(substring(x.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 20 then '01:00'
			          when cast(substring(x.datetime_kst, 12,2) as integer) >= 20 and cast(substring(x.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 24 then '05:00'
			      end day_time
			   , (select case when position('.0' in z.o_price) > (char_length(z.o_price)-2) then replace(z.o_price, '.0', '') else z.o_price end 
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 0 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 4
		       	   order by z.datetime_kst 
		     	   limit 1) o_price_0_4
		       , (select case when position('.0' in z.o_price) > (char_length(z.o_price)-2) then replace(z.o_price, '.0', '') else z.o_price end 
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 4 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 8
		       	   order by z.datetime_kst 
		     	   limit 1) o_price_4_8
		       , (select case when position('.0' in z.o_price) > (char_length(z.o_price)-2) then replace(z.o_price, '.0', '') else z.o_price end 
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 8 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 12
		       	   order by z.datetime_kst 
		     	   limit 1) o_price_8_12
		       , (select case when position('.0' in z.o_price) > (char_length(z.o_price)-2) then replace(z.o_price, '.0', '') else z.o_price end 
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 12 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 16
		       	   order by z.datetime_kst 
		     	   limit 1) o_price_12_16
		       , (select case when position('.0' in z.o_price) > (char_length(z.o_price)-2) then replace(z.o_price, '.0', '') else z.o_price end 
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 16 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 20
		       	   order by z.datetime_kst 
		     	   limit 1) o_price_16_20
		       , (select case when position('.0' in z.o_price) > (char_length(z.o_price)-2) then replace(z.o_price, '.0', '') else z.o_price end 
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 20 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 24
		       	   order by z.datetime_kst 
		     	   limit 1) o_price_20_24
		       , (select case when position('.0' in z.c_price) > (char_length(z.c_price)-2) then replace(z.c_price, '.0', '') else z.c_price end 
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 0 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 4
		       	   order by z.datetime_kst desc 
		     	   limit 1) c_price_0_4
		       , (select case when position('.0' in z.c_price) > (char_length(z.c_price)-2) then replace(z.c_price, '.0', '') else z.c_price end 
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 4 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 8
		       	   order by z.datetime_kst desc 
		     	   limit 1) c_price_4_8
		       , (select case when position('.0' in z.c_price) > (char_length(z.c_price)-2) then replace(z.c_price, '.0', '') else z.c_price end 
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 8 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 12
		       	   order by z.datetime_kst desc 
		     	   limit 1) c_price_8_12
		       , (select case when position('.0' in z.c_price) > (char_length(z.c_price)-2) then replace(z.c_price, '.0', '') else z.c_price end 
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 12 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 16
		       	   order by z.datetime_kst desc 
		     	   limit 1) c_price_12_16
		       , (select case when position('.0' in z.c_price) > (char_length(z.c_price)-2) then replace(z.c_price, '.0', '') else z.c_price end 
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 16 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 20
		       	   order by z.datetime_kst desc 
		     	   limit 1) c_price_16_20
		       , (select case when position('.0' in z.c_price) > (char_length(z.c_price)-2) then replace(z.c_price, '.0', '') else z.c_price end 
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 20 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 24
		       	   order by z.datetime_kst desc 
		     	   limit 1) c_price_20_24
		       , (select case when position('.0' in cast(cast(z.h_price as numeric) as varchar)) > (char_length(cast(cast(z.h_price as numeric) as varchar))-2) then replace((cast(cast(z.h_price as numeric) as varchar)), '.0', '') else cast(cast(z.h_price as numeric) as varchar) end
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 0 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 4
		       	   order by cast(z.h_price as numeric) desc
		     	   limit 1) h_price_0_4 
		       , (select case when position('.0' in cast(cast(z.h_price as numeric) as varchar)) > (char_length(cast(cast(z.h_price as numeric) as varchar))-2) then replace((cast(cast(z.h_price as numeric) as varchar)), '.0', '') else cast(cast(z.h_price as numeric) as varchar) end
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 4 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 8
		       	   order by cast(z.h_price as numeric) desc
		     	   limit 1) h_price_4_8
		       , (select case when position('.0' in cast(cast(z.h_price as numeric) as varchar)) > (char_length(cast(cast(z.h_price as numeric) as varchar))-2) then replace((cast(cast(z.h_price as numeric) as varchar)), '.0', '') else cast(cast(z.h_price as numeric) as varchar) end 
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 8 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 12
		       	   order by cast(z.h_price as numeric) desc
		     	   limit 1) h_price_8_12
		       , (select case when position('.0' in cast(cast(z.h_price as numeric) as varchar)) > (char_length(cast(cast(z.h_price as numeric) as varchar))-2) then replace((cast(cast(z.h_price as numeric) as varchar)), '.0', '') else cast(cast(z.h_price as numeric) as varchar) end 
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 12 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 16
		       	   order by cast(z.h_price as numeric) desc
		     	   limit 1) h_price_12_16
		       , (select case when position('.0' in cast(cast(z.h_price as numeric) as varchar)) > (char_length(cast(cast(z.h_price as numeric) as varchar))-2) then replace((cast(cast(z.h_price as numeric) as varchar)), '.0', '') else cast(cast(z.h_price as numeric) as varchar) end 
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 16 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 20
		       	   order by cast(z.h_price as numeric) desc
		     	   limit 1) h_price_16_20
		       , (select case when position('.0' in cast(cast(z.h_price as numeric) as varchar)) > (char_length(cast(cast(z.h_price as numeric) as varchar))-2) then replace((cast(cast(z.h_price as numeric) as varchar)), '.0', '') else cast(cast(z.h_price as numeric) as varchar) end 
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 20 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 24
		       	   order by cast(z.h_price as numeric) desc
		     	   limit 1) h_price_20_24
		       , (select case when position('.0' in cast(cast(z.l_price as numeric) as varchar)) > (char_length(cast(cast(z.l_price as numeric) as varchar))-2) then replace((cast(cast(z.l_price as numeric) as varchar)), '.0', '') else cast(cast(z.l_price as numeric) as varchar) end 
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 0 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 4
		       	   order by cast(z.l_price as numeric) asc
		     	   limit 1) l_price_0_4
		       , (select case when position('.0' in cast(cast(z.l_price as numeric) as varchar)) > (char_length(cast(cast(z.l_price as numeric) as varchar))-2) then replace((cast(cast(z.l_price as numeric) as varchar)), '.0', '') else cast(cast(z.l_price as numeric) as varchar) end
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 4 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 8
		       	   order by cast(z.l_price as numeric) asc
		     	   limit 1) l_price_4_8
		       , (select case when position('.0' in cast(cast(z.l_price as numeric) as varchar)) > (char_length(cast(cast(z.l_price as numeric) as varchar))-2) then replace((cast(cast(z.l_price as numeric) as varchar)), '.0', '') else cast(cast(z.l_price as numeric) as varchar) end
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 8 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 12
		       	   order by cast(z.l_price as numeric) asc
		     	   limit 1) l_price_8_12
		       , (select case when position('.0' in cast(cast(z.l_price as numeric) as varchar)) > (char_length(cast(cast(z.l_price as numeric) as varchar))-2) then replace((cast(cast(z.l_price as numeric) as varchar)), '.0', '') else cast(cast(z.l_price as numeric) as varchar) end
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 12 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 16
		       	   order by cast(z.l_price as numeric) asc
		     	   limit 1) l_price_12_16
		       , (select case when position('.0' in cast(cast(z.l_price as numeric) as varchar)) > (char_length(cast(cast(z.l_price as numeric) as varchar))-2) then replace((cast(cast(z.l_price as numeric) as varchar)), '.0', '') else cast(cast(z.l_price as numeric) as varchar) end
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 16 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 20
		       	   order by cast(z.l_price as numeric) asc
		     	   limit 1) l_price_16_20
		       , (select case when position('.0' in cast(cast(z.l_price as numeric) as varchar)) > (char_length(cast(cast(z.l_price as numeric) as varchar))-2) then replace((cast(cast(z.l_price as numeric) as varchar)), '.0', '') else cast(cast(z.l_price as numeric) as varchar) end
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 20 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 24
		       	   order by cast(z.l_price as numeric) asc
		     	   limit 1) l_price_20_24
		       , (select cast((round(sum(cast(z.trade_volume as numeric)),2)) as varchar)
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 0 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 4
		       	   group by z.datetime_utc, z.datetime_kst
		     	   order by z.datetime_kst desc
		     	   limit 1) trade_volume_0_4
		       , (select cast((round(sum(cast(z.trade_volume as numeric)),2)) as varchar)
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 4 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 8
		       	   group by z.datetime_utc, z.datetime_kst
		     	   order by z.datetime_kst desc
		     	   limit 1) trade_volume_4_8
		       , (select cast((round(sum(cast(z.trade_volume as numeric)),2)) as varchar)
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 8 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 12
		       	   group by z.datetime_utc, z.datetime_kst
		     	   order by z.datetime_kst desc
		     	   limit 1) trade_volume_8_12
		       , (select cast((round(sum(cast(z.trade_volume as numeric)),2)) as varchar)
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 12 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 16
		       	   group by z.datetime_utc, z.datetime_kst
		     	   order by z.datetime_kst desc
		     	   limit 1) trade_volume_12_16
		       , (select cast((round(sum(cast(z.trade_volume as numeric)),2)) as varchar)
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 16 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 20
		       	   group by z.datetime_utc, z.datetime_kst
		     	   order by z.datetime_kst desc
		     	   limit 1) trade_volume_16_20
		       , (select cast((round(sum(cast(z.trade_volume as numeric)),2)) as varchar)
		       	    from bithumb_coin_min z 
		       	   where z.coin_ticker = x.coin_ticker
		       	     and left(z.datetime_kst, 10) = #{date}
		       	     and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 20 and cast(substring(z.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 24
		       	   group by z.datetime_utc, z.datetime_kst
		     	   order by z.datetime_kst desc
		     	   limit 1) trade_volume_20_24
		    from bithumb_coin_min x 
		   where x.coin_ticker = #{coin_ticker}
		     and left(x.datetime_kst, 10) = #{date}
		   group by x.coin_ticker, left(x.datetime_kst, 10)
		   		  , case when cast(substring(x.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 0 and cast(substring(x.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 4 then '09:00'
				    	 when cast(substring(x.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 4 and cast(substring(x.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 8 then '13:00'
				         when cast(substring(x.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 8 and cast(substring(x.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 12 then '17:00'
				         when cast(substring(x.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 12 and cast(substring(x.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 16 then '21:00'
				         when cast(substring(x.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 16 and cast(substring(x.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 20 then '01:00'
				         when cast(substring(x.datetime_kst, 12,2) as integer) <![CDATA[ >= ]]> 20 and cast(substring(x.datetime_kst, 12,2) as integer) <![CDATA[ < ]]> 24 then '05:00' end
	</select>
	
	<select id="ExcelMake_Weekly_Result" resultType="java.lang.String" parameterType="HashMap">
		select ('상승 = ' || cast(sum(cast(x.increase_count as integer)) as varchar) || ' | 하락 = ' || cast(sum(cast(x.degradation_count as integer)) as varchar) || ' | 보합 = ' || cast(sum(cast(x.flat_count as integer)) as varchar)) result_data
		  from (
				select case when cast(x.o_price as numeric) <![CDATA[ < ]]> cast(x.c_price as numeric) then '1' else '0' end increase_count
				     , case when cast(x.o_price as numeric) <![CDATA[ > ]]> cast(x.c_price as numeric) then '1' else '0' end degradation_count
				     , case when cast(x.o_price as numeric) <![CDATA[ = ]]> cast(x.c_price as numeric) then '1' else '0' end flat_count
				  from (
						select x.coin_ticker
							 , (select case when position('.0' in z.c_price) > (char_length(z.c_price)-2) then replace(z.c_price, '.0', '') else z.c_price end 
							 	  from bithumb_coin_days z 
							 	 where x.coin_ticker = z.coin_ticker 
							 	   and left(z.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
								   and left(z.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
							 	 order by z.datetime_kst desc 
							 	 limit 1) c_price
							 , (select case when position('.0' in z.o_price) > (char_length(z.o_price)-2) then replace(z.o_price, '.0', '') else z.o_price end 
							      from bithumb_coin_days z 
							     where x.coin_ticker = z.coin_ticker 
							       and left(z.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
								   and left(z.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
							     order by z.datetime_kst asc 
							     limit 1) o_price  
						  from bithumb_coin_days x
						 where left(x.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						   and left(x.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 group by x.coin_ticker
				 		) x
		 	) x
	</select>
	
	<select id="ExcelMake_Weekly" resultType="HashMap" parameterType="HashMap">
		select x.coin_ticker, x.gijun_date, x.coin_kor_name, x.coin_eng_name, x.max_price, x.min_price, x.max_date, x.min_date, x.o_price, x.c_price, x.l_price, x.h_price
			 , coalesce(x.o_c_price_rate_5_date, '') o_c_price_rate_5_date, coalesce(x.o_c_price_rate_10_date, '') o_c_price_rate_10_date, coalesce(x.o_c_price_rate_15_date, '') o_c_price_rate_15_date
	 		 , coalesce(x.o_c_price_rate_20_date, '') o_c_price_rate_20_date, coalesce(x.o_c_price_rate_25_date, '') o_c_price_rate_25_date, coalesce(x.o_c_price_rate_30_date, '') o_c_price_rate_30_date
	 		 , coalesce(cast(x.o_c_price_rate_5_count as varchar), '0') o_c_price_rate_5_count, coalesce(cast(x.o_c_price_rate_10_count as varchar), '0') o_c_price_rate_10_count, coalesce(cast(x.o_c_price_rate_15_count as varchar), '0') o_c_price_rate_15_count
	 		 , coalesce(cast(x.o_c_price_rate_20_count as varchar), '0') o_c_price_rate_20_count, coalesce(cast(x.o_c_price_rate_25_count as varchar), '0') o_c_price_rate_25_count, coalesce(cast(x.o_c_price_rate_30_count as varchar), '0') o_c_price_rate_30_count
			 , cast((ROUND(((cast(x.c_price as numeric)-cast(x.o_price as numeric))/cast(x.o_price as numeric))*100,1)) as varchar) open_close_rate
			 , cast((cast(x.c_price as numeric)-cast(x.o_price as numeric)) as varchar) open_close_calc
			 , cast(ROUND(((((cast(x.max_price as numeric) - cast(x.min_price as numeric))/ cast(x.min_price as numeric))) * 100), 1) as varchar) lowest_highest_fluctuation
			 , cast((cast(x.max_price as numeric)-cast(x.min_price as numeric)) as varchar) lowest_highest_calc
		  from (
				select x.coin_ticker, y.coin_kor_name, y.coin_eng_name
					 , coalesce((select max(replace(a.datetime_kst, ' 00:00:00', '')) 
					 			   from bithumb_coin_days a 
					 			  where a.coin_ticker = x.coin_ticker 
				 			     <if test='std_date != null and std_date != "" '>
									and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
								 </if>
								 <if test='end_date != null and end_date != "" '>
									and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
								 </if>
					 			    and a.l_price = cast(min(cast(x.l_price as numeric)) as varchar)), '') min_date
			 		 , coalesce((select max(replace(a.datetime_kst, ' 00:00:00', '')) 
			 		 			   from bithumb_coin_days a 
			 		 			  where a.coin_ticker = x.coin_ticker
			 		 			  <if test='std_date != null and std_date != "" '>
									and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
								  </if>
								  <if test='end_date != null and end_date != "" '>
									and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
								  </if>
			 		 			    and a.h_price = cast(max(cast(x.h_price as numeric)) as varchar)), '') max_date
					 , case when position('.0' in cast(min(cast(x.l_price as numeric)) as varchar)) > (char_length(cast(min(cast(x.l_price as numeric)) as varchar))-2) then replace((cast(min(cast(x.l_price as numeric)) as varchar)), '.0', '') else cast(min(cast(x.l_price as numeric)) as varchar) end  min_price
					 , case when position('.0' in cast(max(cast(x.h_price as numeric)) as varchar)) > (char_length(cast(max(cast(x.h_price as numeric)) as varchar))-2) then replace((cast(max(cast(x.h_price as numeric)) as varchar)), '.0', '') else cast(max(cast(x.h_price as numeric)) as varchar) end  max_price
		             , (select case when position('.0' in z.c_price) > (char_length(z.c_price)-2) then replace(z.c_price, '.0', '') else z.c_price end 
		             	  from bithumb_coin_days z 
		             	 where x.coin_ticker = z.coin_ticker 
		             	 <if test='std_date != null and std_date != "" '>
							and left(z.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(z.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
		             	 order by z.datetime_kst desc 
		             	 limit 1) c_price
		             , (select case when position('.0' in z.o_price) > (char_length(z.o_price)-2) then replace(z.o_price, '.0', '') else z.o_price end 
		                  from bithumb_coin_days z 
		                 where x.coin_ticker = z.coin_ticker 
		                 <if test='std_date != null and std_date != "" '>
							and left(z.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(z.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
		                 order by z.datetime_kst asc 
		                 limit 1) o_price
					 , (select case when position('.0' in cast(min(cast(z.l_price as numeric)) as varchar)) > (char_length(cast(min(cast(z.l_price as numeric)) as varchar))-2) then replace(cast(min(cast(z.l_price as numeric)) as varchar), '.0', '') else cast(min(cast(z.l_price as numeric)) as varchar) end 
					 	  from bithumb_coin_days z
					 	 where x.coin_ticker = z.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(z.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(z.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	 limit 1) l_price
		     		 , (select case when position('.0' in cast(max(cast(z.h_price as numeric)) as varchar)) > (char_length(cast(max(cast(z.h_price as numeric)) as varchar))-2) then replace(cast(max(cast(z.h_price as numeric)) as varchar), '.0', '') else cast(max(cast(z.h_price as numeric)) as varchar) end 
		     		 	  from bithumb_coin_days z 
		     		 	 where x.coin_ticker = z.coin_ticker 
		     		 	 <if test='std_date != null and std_date != "" '>
							and left(z.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(z.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
		     		 	 limit 1) h_price
		 			 , (select replace(a.datetime_kst, ' 00:00:00', '') 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	 order by a.datetime_kst desc 
					 	 limit 1) gijun_date
					 , (select replace(a.datetime_kst, ' 00:00:00', '') 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 5 
					 	 order by a.datetime_kst desc limit 1) o_c_price_rate_5_date
					 , (select replace(a.datetime_kst, ' 00:00:00', '') 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 10 
					 	 order by a.datetime_kst desc limit 1) o_c_price_rate_10_date
					 , (select replace(a.datetime_kst, ' 00:00:00', '') 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 15 
					 	 order by a.datetime_kst desc limit 1) o_c_price_rate_15_date
					 , (select replace(a.datetime_kst, ' 00:00:00', '') 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 20 
					 	 order by a.datetime_kst desc limit 1) o_c_price_rate_20_date
					 , (select replace(a.datetime_kst, ' 00:00:00', '') 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 25 
					 	 order by a.datetime_kst desc limit 1) o_c_price_rate_25_date
					 , (select replace(a.datetime_kst, ' 00:00:00', '') 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 30 
					 	 order by a.datetime_kst desc limit 1) o_c_price_rate_30_date
					 , (select count(*) 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 5) o_c_price_rate_5_count
					 , (select count(*) 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 10) o_c_price_rate_10_count
					 , (select count(*) 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 15) o_c_price_rate_15_count
					 , (select count(*) 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 20) o_c_price_rate_20_count
					 , (select count(*) 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 25) o_c_price_rate_25_count
					 , (select count(*) 
					 	  from bithumb_coin_days a 
					 	 where x.coin_ticker = a.coin_ticker 
					 	 <if test='std_date != null and std_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
						 </if>
						 <if test='end_date != null and end_date != "" '>
							and left(a.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
						 </if>
					 	   and cast(a.o_c_price_rate as numeric) <![CDATA[ >= ]]> 30) o_c_price_rate_30_count
				  from bithumb_coin_days x, bithumb_coin_info y
				 where x.coin_ticker = y.coin_ticker
				 <if test='std_date != null and std_date != "" '>
					and left(x.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
				 </if>
				 <if test='end_date != null and end_date != "" '>
					and left(x.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
				 </if>
				 group by x.coin_ticker, y.coin_kor_name, y.coin_eng_name
		 	   ) x
		  order by case x.coin_ticker when 'BTC' then 0 else 1 end
		  	  , ((ROUND(((cast(x.c_price as numeric)-cast(x.o_price as numeric))/cast(x.o_price as numeric))*100,1))+ROUND(((((cast(x.max_price as numeric) - cast(x.min_price as numeric))/ cast(x.min_price as numeric))) * 100), 1)) desc
  		  limit 4
	</select>
	
	<select id="ExcelMake_Weekly_Sub" resultType="HashMap" parameterType="HashMap">
		select replace(x.datetime_kst, ' 00:00:00', '') datetime_kst, x.o_c_price_rate
		 	 , case when position('.0' in x.o_price) > (char_length(x.o_price)-2) then replace(x.o_price, '.0', '') else x.o_price end o_price
		 	 , case when position('.0' in x.c_price) > (char_length(x.c_price)-2) then replace(x.c_price, '.0', '') else x.c_price end c_price
		 	 , case when position('.0' in x.l_price) > (char_length(x.l_price)-2) then replace(x.l_price, '.0', '') else x.l_price end l_price
		 	 , case when position('.0' in x.h_price) > (char_length(x.h_price)-2) then replace(x.h_price, '.0', '') else x.h_price end h_price
	  	  from bithumb_coin_days x
		 where coin_ticker = #{coin_ticker}
	       and left(x.datetime_kst, 10) <![CDATA[ >= ]]> #{std_date}
		   and left(x.datetime_kst, 10) <![CDATA[ <= ]]> #{end_date}
	     order by x.datetime_kst asc
	</select>
</mapper>